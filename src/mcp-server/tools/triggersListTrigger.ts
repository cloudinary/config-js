/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { triggersListTrigger } from "../../funcs/triggersListTrigger.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  eventType: z.string().optional(),
};

export const tool$triggersListTrigger: ToolDefinition<typeof args> = {
  name: "list-triggers",
  description:
    `Lists all webhook notification triggers configured for your product environmentcloudinary

Retrieves a list of all event triggers and notifications within your product environment.
`,
  scopes: ["admin"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await triggersListTrigger(
      client,
      args.eventType,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
