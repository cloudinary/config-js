/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { uploadMappingsDeleteUploadMapping } from "../../funcs/uploadMappingsDeleteUploadMapping.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  folder: z.string(),
};

export const tool$uploadMappingsDeleteUploadMapping: ToolDefinition<
  typeof args
> = {
  name: "delete-upload-mapping",
  description:
    `Purpose: Permanently removes custom URL mappings for specific folders, stopping branded or custom domain delivery for assets in those folders and reverting to standard Cloudinary URL patterns.
Usage: Use this to clean up unused mappings, remove deprecated custom domains, or eliminate mapping configurations that are no longer needed. Essential for maintaining clean URL routing and removing outdated branded delivery setups.
Example request: DELETE /upload_mappings?folder=old_products
Parameters: folder(folder path of mapping to remove)
Warning: This permanently removes the custom URL mapping and affects how assets in this folder are delivered. Ensure alternative delivery methods are in place if needed.
When Not to Use: Don't delete mappings that are actively used in production without confirming impact on asset delivery. Avoid deletion during high-traffic periods.
Output: Returns deletion confirmation: message(deletion status), external_id(unique identifier of deleted mapping)
Example output: {"message": "deleted", "external_id": "mapping_456"}
`,
  scopes: ["builder"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await uploadMappingsDeleteUploadMapping(
      client,
      args.folder,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
