/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { streamingProfilesDeleteStreamingProfile } from "../../funcs/streamingProfilesDeleteStreamingProfile.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  name: z.string(),
};

export const tool$streamingProfilesDeleteStreamingProfile: ToolDefinition<
  typeof args
> = {
  name: "delete-streaming-profile",
  description:
    `Purpose: Removes a streaming profile or reverts a built-in profile to its default settings. If the profile is a custom one, this operation permanently deletes it from your account. If the profile is a built-in Cloudinary profile that you have modified via an update, this will undo the customizations and restore the original preset values. (Attempting to delete a built-in profile that has never been modified will result in an error rather than a deletion.)
Usage: Use this operation to clean up streaming profiles that are no longer needed or to rollback changes on a built-in profile. For a custom profile that you no longer use, deleting it frees up its name and removes clutter from your configuration. For a built-in profile that you previously customized, deleting (reverting) it will discard your overrides and return to Cloudinary's default profile settings. Be cautious to only use this on profiles you truly want to remove or reset, especially if they might be referenced in existing media delivery URLs.
When Not to Use: Avoid using this on a built-in profile that you have not altered, because the operation will not succeed in that case. If your intention is to modify a profile's settings rather than remove it entirely, use **update-streaming-profile** instead of deletion. Also, do not use this for simply disabling a profile—built-in profiles cannot be deleted from the system, so if you don't want to use a built-in profile, you can just refrain from using it without calling this operation.
Output: On success, the API returns a confirmation message indicating that the profile was deleted (for custom profiles) or reverted to defaults (for built-in profiles). No detailed profile object is returned upon deletion—just the status message. If the profile could not be deleted (for example, if it was not found or was an unmodified built-in), an error message will be returned instead indicating the reason.
`,
  scopes: ["builder"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await streamingProfilesDeleteStreamingProfile(
      client,
      args.name,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
