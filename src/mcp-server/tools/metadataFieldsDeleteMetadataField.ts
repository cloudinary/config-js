/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { metadataFieldsDeleteMetadataField } from "../../funcs/metadataFieldsDeleteMetadataField.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  externalId: z.string(),
};

export const tool$metadataFieldsDeleteMetadataField: ToolDefinition<
  typeof args
> = {
  name: "delete-metadata-field",
  description:
    `Purpose: Permanently removes a structured metadata field from your Cloudinary account, including all associated data, values, and configurations. This action also removes the field from any assets that currently have values for this field.
Usage: Use this to clean up unused metadata fields, remove deprecated data structures, or reorganize metadata schemas when fields are no longer needed. Essential for maintaining clean metadata organization and reducing schema complexity.
Example request: DELETE /metadata_fields/old_product_field (external_id in URL path)
Parameters: external_id(field identifier from URL path)
Warning: This is irreversible and will permanently delete all field data from assets. Ensure the field is not needed for production workflows before deletion.
When Not to Use: Don't delete fields that are still being used in production applications or contain valuable data. Avoid deletion without backing up field data if it might be needed later.
Output: Returns deletion confirmation: message(deletion status confirmation)
Example output: {"message": "Field deleted successfully"}
`,
  scopes: ["builder"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await metadataFieldsDeleteMetadataField(
      client,
      args.externalId,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
