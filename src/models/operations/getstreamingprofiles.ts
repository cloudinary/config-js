/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetStreamingProfilesGlobals = {
  /**
   * The cloud name of your product environment.
   */
  cloudName?: string | undefined;
};

export type GetStreamingProfilesRequest = {};

/**
 * Streaming profiles retrieved
 */
export type GetStreamingProfilesResponse = {
  data: Array<components.StreamingProfile>;
};

/** @internal */
export const GetStreamingProfilesGlobals$inboundSchema: z.ZodType<
  GetStreamingProfilesGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "cloud_name": "cloudName",
  });
});

/** @internal */
export type GetStreamingProfilesGlobals$Outbound = {
  cloud_name?: string | undefined;
};

/** @internal */
export const GetStreamingProfilesGlobals$outboundSchema: z.ZodType<
  GetStreamingProfilesGlobals$Outbound,
  z.ZodTypeDef,
  GetStreamingProfilesGlobals
> = z.object({
  cloudName: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    cloudName: "cloud_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetStreamingProfilesGlobals$ {
  /** @deprecated use `GetStreamingProfilesGlobals$inboundSchema` instead. */
  export const inboundSchema = GetStreamingProfilesGlobals$inboundSchema;
  /** @deprecated use `GetStreamingProfilesGlobals$outboundSchema` instead. */
  export const outboundSchema = GetStreamingProfilesGlobals$outboundSchema;
  /** @deprecated use `GetStreamingProfilesGlobals$Outbound` instead. */
  export type Outbound = GetStreamingProfilesGlobals$Outbound;
}

export function getStreamingProfilesGlobalsToJSON(
  getStreamingProfilesGlobals: GetStreamingProfilesGlobals,
): string {
  return JSON.stringify(
    GetStreamingProfilesGlobals$outboundSchema.parse(
      getStreamingProfilesGlobals,
    ),
  );
}

export function getStreamingProfilesGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<GetStreamingProfilesGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetStreamingProfilesGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetStreamingProfilesGlobals' from JSON`,
  );
}

/** @internal */
export const GetStreamingProfilesRequest$inboundSchema: z.ZodType<
  GetStreamingProfilesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type GetStreamingProfilesRequest$Outbound = {};

/** @internal */
export const GetStreamingProfilesRequest$outboundSchema: z.ZodType<
  GetStreamingProfilesRequest$Outbound,
  z.ZodTypeDef,
  GetStreamingProfilesRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetStreamingProfilesRequest$ {
  /** @deprecated use `GetStreamingProfilesRequest$inboundSchema` instead. */
  export const inboundSchema = GetStreamingProfilesRequest$inboundSchema;
  /** @deprecated use `GetStreamingProfilesRequest$outboundSchema` instead. */
  export const outboundSchema = GetStreamingProfilesRequest$outboundSchema;
  /** @deprecated use `GetStreamingProfilesRequest$Outbound` instead. */
  export type Outbound = GetStreamingProfilesRequest$Outbound;
}

export function getStreamingProfilesRequestToJSON(
  getStreamingProfilesRequest: GetStreamingProfilesRequest,
): string {
  return JSON.stringify(
    GetStreamingProfilesRequest$outboundSchema.parse(
      getStreamingProfilesRequest,
    ),
  );
}

export function getStreamingProfilesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetStreamingProfilesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetStreamingProfilesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetStreamingProfilesRequest' from JSON`,
  );
}

/** @internal */
export const GetStreamingProfilesResponse$inboundSchema: z.ZodType<
  GetStreamingProfilesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(components.StreamingProfile$inboundSchema),
});

/** @internal */
export type GetStreamingProfilesResponse$Outbound = {
  data: Array<components.StreamingProfile$Outbound>;
};

/** @internal */
export const GetStreamingProfilesResponse$outboundSchema: z.ZodType<
  GetStreamingProfilesResponse$Outbound,
  z.ZodTypeDef,
  GetStreamingProfilesResponse
> = z.object({
  data: z.array(components.StreamingProfile$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetStreamingProfilesResponse$ {
  /** @deprecated use `GetStreamingProfilesResponse$inboundSchema` instead. */
  export const inboundSchema = GetStreamingProfilesResponse$inboundSchema;
  /** @deprecated use `GetStreamingProfilesResponse$outboundSchema` instead. */
  export const outboundSchema = GetStreamingProfilesResponse$outboundSchema;
  /** @deprecated use `GetStreamingProfilesResponse$Outbound` instead. */
  export type Outbound = GetStreamingProfilesResponse$Outbound;
}

export function getStreamingProfilesResponseToJSON(
  getStreamingProfilesResponse: GetStreamingProfilesResponse,
): string {
  return JSON.stringify(
    GetStreamingProfilesResponse$outboundSchema.parse(
      getStreamingProfilesResponse,
    ),
  );
}

export function getStreamingProfilesResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetStreamingProfilesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetStreamingProfilesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetStreamingProfilesResponse' from JSON`,
  );
}
