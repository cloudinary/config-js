/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateTriggerGlobals = {
  /**
   * The cloud name of your product environment.
   */
  cloudName?: string | undefined;
};

export type UpdateTriggerRequestBody = {
  /**
   * The updated URL that will receive the notification response.
   */
  newUri: string;
};

export type UpdateTriggerRequest = {
  id: string;
  requestBody: UpdateTriggerRequestBody;
};

/**
 * Trigger updated successfully
 */
export type UpdateTriggerResponse = {
  message: string;
};

/** @internal */
export const UpdateTriggerGlobals$inboundSchema: z.ZodType<
  UpdateTriggerGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "cloud_name": "cloudName",
  });
});

/** @internal */
export type UpdateTriggerGlobals$Outbound = {
  cloud_name?: string | undefined;
};

/** @internal */
export const UpdateTriggerGlobals$outboundSchema: z.ZodType<
  UpdateTriggerGlobals$Outbound,
  z.ZodTypeDef,
  UpdateTriggerGlobals
> = z.object({
  cloudName: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    cloudName: "cloud_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTriggerGlobals$ {
  /** @deprecated use `UpdateTriggerGlobals$inboundSchema` instead. */
  export const inboundSchema = UpdateTriggerGlobals$inboundSchema;
  /** @deprecated use `UpdateTriggerGlobals$outboundSchema` instead. */
  export const outboundSchema = UpdateTriggerGlobals$outboundSchema;
  /** @deprecated use `UpdateTriggerGlobals$Outbound` instead. */
  export type Outbound = UpdateTriggerGlobals$Outbound;
}

export function updateTriggerGlobalsToJSON(
  updateTriggerGlobals: UpdateTriggerGlobals,
): string {
  return JSON.stringify(
    UpdateTriggerGlobals$outboundSchema.parse(updateTriggerGlobals),
  );
}

export function updateTriggerGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTriggerGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTriggerGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTriggerGlobals' from JSON`,
  );
}

/** @internal */
export const UpdateTriggerRequestBody$inboundSchema: z.ZodType<
  UpdateTriggerRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  new_uri: z.string(),
}).transform((v) => {
  return remap$(v, {
    "new_uri": "newUri",
  });
});

/** @internal */
export type UpdateTriggerRequestBody$Outbound = {
  new_uri: string;
};

/** @internal */
export const UpdateTriggerRequestBody$outboundSchema: z.ZodType<
  UpdateTriggerRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateTriggerRequestBody
> = z.object({
  newUri: z.string(),
}).transform((v) => {
  return remap$(v, {
    newUri: "new_uri",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTriggerRequestBody$ {
  /** @deprecated use `UpdateTriggerRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateTriggerRequestBody$inboundSchema;
  /** @deprecated use `UpdateTriggerRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateTriggerRequestBody$outboundSchema;
  /** @deprecated use `UpdateTriggerRequestBody$Outbound` instead. */
  export type Outbound = UpdateTriggerRequestBody$Outbound;
}

export function updateTriggerRequestBodyToJSON(
  updateTriggerRequestBody: UpdateTriggerRequestBody,
): string {
  return JSON.stringify(
    UpdateTriggerRequestBody$outboundSchema.parse(updateTriggerRequestBody),
  );
}

export function updateTriggerRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTriggerRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTriggerRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTriggerRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateTriggerRequest$inboundSchema: z.ZodType<
  UpdateTriggerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  RequestBody: z.lazy(() => UpdateTriggerRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateTriggerRequest$Outbound = {
  id: string;
  RequestBody: UpdateTriggerRequestBody$Outbound;
};

/** @internal */
export const UpdateTriggerRequest$outboundSchema: z.ZodType<
  UpdateTriggerRequest$Outbound,
  z.ZodTypeDef,
  UpdateTriggerRequest
> = z.object({
  id: z.string(),
  requestBody: z.lazy(() => UpdateTriggerRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTriggerRequest$ {
  /** @deprecated use `UpdateTriggerRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateTriggerRequest$inboundSchema;
  /** @deprecated use `UpdateTriggerRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateTriggerRequest$outboundSchema;
  /** @deprecated use `UpdateTriggerRequest$Outbound` instead. */
  export type Outbound = UpdateTriggerRequest$Outbound;
}

export function updateTriggerRequestToJSON(
  updateTriggerRequest: UpdateTriggerRequest,
): string {
  return JSON.stringify(
    UpdateTriggerRequest$outboundSchema.parse(updateTriggerRequest),
  );
}

export function updateTriggerRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTriggerRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTriggerRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTriggerRequest' from JSON`,
  );
}

/** @internal */
export const UpdateTriggerResponse$inboundSchema: z.ZodType<
  UpdateTriggerResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type UpdateTriggerResponse$Outbound = {
  message: string;
};

/** @internal */
export const UpdateTriggerResponse$outboundSchema: z.ZodType<
  UpdateTriggerResponse$Outbound,
  z.ZodTypeDef,
  UpdateTriggerResponse
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTriggerResponse$ {
  /** @deprecated use `UpdateTriggerResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateTriggerResponse$inboundSchema;
  /** @deprecated use `UpdateTriggerResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateTriggerResponse$outboundSchema;
  /** @deprecated use `UpdateTriggerResponse$Outbound` instead. */
  export type Outbound = UpdateTriggerResponse$Outbound;
}

export function updateTriggerResponseToJSON(
  updateTriggerResponse: UpdateTriggerResponse,
): string {
  return JSON.stringify(
    UpdateTriggerResponse$outboundSchema.parse(updateTriggerResponse),
  );
}

export function updateTriggerResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTriggerResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTriggerResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTriggerResponse' from JSON`,
  );
}
