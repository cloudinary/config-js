/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ReorderMetadataFieldsGlobals = {
  /**
   * The cloud name of your product environment.
   */
  cloudName?: string | undefined;
};

/**
 * The field to order by.
 */
export const ReorderMetadataFieldsOrderBy = {
  Label: "label",
  CreatedAt: "created_at",
  ExternalId: "external_id",
} as const;
/**
 * The field to order by.
 */
export type ReorderMetadataFieldsOrderBy = ClosedEnum<
  typeof ReorderMetadataFieldsOrderBy
>;

/**
 * The direction to order by.
 */
export const ReorderMetadataFieldsDirection = {
  Asc: "asc",
  Desc: "desc",
} as const;
/**
 * The direction to order by.
 */
export type ReorderMetadataFieldsDirection = ClosedEnum<
  typeof ReorderMetadataFieldsDirection
>;

export type ReorderMetadataFieldsRequest = {
  /**
   * The field to order by.
   */
  orderBy: ReorderMetadataFieldsOrderBy;
  /**
   * The direction to order by.
   */
  direction?: ReorderMetadataFieldsDirection | undefined;
};

/**
 * metadata fields reordered
 */
export type ReorderMetadataFieldsResponse = {
  metadataFields?: Array<components.MetadataField> | undefined;
};

/** @internal */
export const ReorderMetadataFieldsGlobals$inboundSchema: z.ZodType<
  ReorderMetadataFieldsGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "cloud_name": "cloudName",
  });
});

/** @internal */
export type ReorderMetadataFieldsGlobals$Outbound = {
  cloud_name?: string | undefined;
};

/** @internal */
export const ReorderMetadataFieldsGlobals$outboundSchema: z.ZodType<
  ReorderMetadataFieldsGlobals$Outbound,
  z.ZodTypeDef,
  ReorderMetadataFieldsGlobals
> = z.object({
  cloudName: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    cloudName: "cloud_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReorderMetadataFieldsGlobals$ {
  /** @deprecated use `ReorderMetadataFieldsGlobals$inboundSchema` instead. */
  export const inboundSchema = ReorderMetadataFieldsGlobals$inboundSchema;
  /** @deprecated use `ReorderMetadataFieldsGlobals$outboundSchema` instead. */
  export const outboundSchema = ReorderMetadataFieldsGlobals$outboundSchema;
  /** @deprecated use `ReorderMetadataFieldsGlobals$Outbound` instead. */
  export type Outbound = ReorderMetadataFieldsGlobals$Outbound;
}

export function reorderMetadataFieldsGlobalsToJSON(
  reorderMetadataFieldsGlobals: ReorderMetadataFieldsGlobals,
): string {
  return JSON.stringify(
    ReorderMetadataFieldsGlobals$outboundSchema.parse(
      reorderMetadataFieldsGlobals,
    ),
  );
}

export function reorderMetadataFieldsGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<ReorderMetadataFieldsGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ReorderMetadataFieldsGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReorderMetadataFieldsGlobals' from JSON`,
  );
}

/** @internal */
export const ReorderMetadataFieldsOrderBy$inboundSchema: z.ZodNativeEnum<
  typeof ReorderMetadataFieldsOrderBy
> = z.nativeEnum(ReorderMetadataFieldsOrderBy);

/** @internal */
export const ReorderMetadataFieldsOrderBy$outboundSchema: z.ZodNativeEnum<
  typeof ReorderMetadataFieldsOrderBy
> = ReorderMetadataFieldsOrderBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReorderMetadataFieldsOrderBy$ {
  /** @deprecated use `ReorderMetadataFieldsOrderBy$inboundSchema` instead. */
  export const inboundSchema = ReorderMetadataFieldsOrderBy$inboundSchema;
  /** @deprecated use `ReorderMetadataFieldsOrderBy$outboundSchema` instead. */
  export const outboundSchema = ReorderMetadataFieldsOrderBy$outboundSchema;
}

/** @internal */
export const ReorderMetadataFieldsDirection$inboundSchema: z.ZodNativeEnum<
  typeof ReorderMetadataFieldsDirection
> = z.nativeEnum(ReorderMetadataFieldsDirection);

/** @internal */
export const ReorderMetadataFieldsDirection$outboundSchema: z.ZodNativeEnum<
  typeof ReorderMetadataFieldsDirection
> = ReorderMetadataFieldsDirection$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReorderMetadataFieldsDirection$ {
  /** @deprecated use `ReorderMetadataFieldsDirection$inboundSchema` instead. */
  export const inboundSchema = ReorderMetadataFieldsDirection$inboundSchema;
  /** @deprecated use `ReorderMetadataFieldsDirection$outboundSchema` instead. */
  export const outboundSchema = ReorderMetadataFieldsDirection$outboundSchema;
}

/** @internal */
export const ReorderMetadataFieldsRequest$inboundSchema: z.ZodType<
  ReorderMetadataFieldsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  order_by: ReorderMetadataFieldsOrderBy$inboundSchema,
  direction: ReorderMetadataFieldsDirection$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "order_by": "orderBy",
  });
});

/** @internal */
export type ReorderMetadataFieldsRequest$Outbound = {
  order_by: string;
  direction?: string | undefined;
};

/** @internal */
export const ReorderMetadataFieldsRequest$outboundSchema: z.ZodType<
  ReorderMetadataFieldsRequest$Outbound,
  z.ZodTypeDef,
  ReorderMetadataFieldsRequest
> = z.object({
  orderBy: ReorderMetadataFieldsOrderBy$outboundSchema,
  direction: ReorderMetadataFieldsDirection$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    orderBy: "order_by",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReorderMetadataFieldsRequest$ {
  /** @deprecated use `ReorderMetadataFieldsRequest$inboundSchema` instead. */
  export const inboundSchema = ReorderMetadataFieldsRequest$inboundSchema;
  /** @deprecated use `ReorderMetadataFieldsRequest$outboundSchema` instead. */
  export const outboundSchema = ReorderMetadataFieldsRequest$outboundSchema;
  /** @deprecated use `ReorderMetadataFieldsRequest$Outbound` instead. */
  export type Outbound = ReorderMetadataFieldsRequest$Outbound;
}

export function reorderMetadataFieldsRequestToJSON(
  reorderMetadataFieldsRequest: ReorderMetadataFieldsRequest,
): string {
  return JSON.stringify(
    ReorderMetadataFieldsRequest$outboundSchema.parse(
      reorderMetadataFieldsRequest,
    ),
  );
}

export function reorderMetadataFieldsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ReorderMetadataFieldsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ReorderMetadataFieldsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReorderMetadataFieldsRequest' from JSON`,
  );
}

/** @internal */
export const ReorderMetadataFieldsResponse$inboundSchema: z.ZodType<
  ReorderMetadataFieldsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  metadata_fields: z.array(components.MetadataField$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "metadata_fields": "metadataFields",
  });
});

/** @internal */
export type ReorderMetadataFieldsResponse$Outbound = {
  metadata_fields?: Array<components.MetadataField$Outbound> | undefined;
};

/** @internal */
export const ReorderMetadataFieldsResponse$outboundSchema: z.ZodType<
  ReorderMetadataFieldsResponse$Outbound,
  z.ZodTypeDef,
  ReorderMetadataFieldsResponse
> = z.object({
  metadataFields: z.array(components.MetadataField$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    metadataFields: "metadata_fields",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReorderMetadataFieldsResponse$ {
  /** @deprecated use `ReorderMetadataFieldsResponse$inboundSchema` instead. */
  export const inboundSchema = ReorderMetadataFieldsResponse$inboundSchema;
  /** @deprecated use `ReorderMetadataFieldsResponse$outboundSchema` instead. */
  export const outboundSchema = ReorderMetadataFieldsResponse$outboundSchema;
  /** @deprecated use `ReorderMetadataFieldsResponse$Outbound` instead. */
  export type Outbound = ReorderMetadataFieldsResponse$Outbound;
}

export function reorderMetadataFieldsResponseToJSON(
  reorderMetadataFieldsResponse: ReorderMetadataFieldsResponse,
): string {
  return JSON.stringify(
    ReorderMetadataFieldsResponse$outboundSchema.parse(
      reorderMetadataFieldsResponse,
    ),
  );
}

export function reorderMetadataFieldsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ReorderMetadataFieldsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ReorderMetadataFieldsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReorderMetadataFieldsResponse' from JSON`,
  );
}
