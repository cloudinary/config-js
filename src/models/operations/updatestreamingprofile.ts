/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateStreamingProfileGlobals = {
  /**
   * The cloud name of your product environment.
   */
  cloudName?: string | undefined;
};

export type UpdateStreamingProfileRequest = {
  name: string;
  streamingProfileUpdate: components.StreamingProfileUpdate;
};

/**
 * Streaming profile updated
 */
export type UpdateStreamingProfileResponse = {
  message: string;
  data: components.StreamingProfile;
};

/** @internal */
export const UpdateStreamingProfileGlobals$inboundSchema: z.ZodType<
  UpdateStreamingProfileGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "cloud_name": "cloudName",
  });
});

/** @internal */
export type UpdateStreamingProfileGlobals$Outbound = {
  cloud_name?: string | undefined;
};

/** @internal */
export const UpdateStreamingProfileGlobals$outboundSchema: z.ZodType<
  UpdateStreamingProfileGlobals$Outbound,
  z.ZodTypeDef,
  UpdateStreamingProfileGlobals
> = z.object({
  cloudName: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    cloudName: "cloud_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStreamingProfileGlobals$ {
  /** @deprecated use `UpdateStreamingProfileGlobals$inboundSchema` instead. */
  export const inboundSchema = UpdateStreamingProfileGlobals$inboundSchema;
  /** @deprecated use `UpdateStreamingProfileGlobals$outboundSchema` instead. */
  export const outboundSchema = UpdateStreamingProfileGlobals$outboundSchema;
  /** @deprecated use `UpdateStreamingProfileGlobals$Outbound` instead. */
  export type Outbound = UpdateStreamingProfileGlobals$Outbound;
}

export function updateStreamingProfileGlobalsToJSON(
  updateStreamingProfileGlobals: UpdateStreamingProfileGlobals,
): string {
  return JSON.stringify(
    UpdateStreamingProfileGlobals$outboundSchema.parse(
      updateStreamingProfileGlobals,
    ),
  );
}

export function updateStreamingProfileGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStreamingProfileGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateStreamingProfileGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStreamingProfileGlobals' from JSON`,
  );
}

/** @internal */
export const UpdateStreamingProfileRequest$inboundSchema: z.ZodType<
  UpdateStreamingProfileRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  streaming_profile_update: components.StreamingProfileUpdate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "streaming_profile_update": "streamingProfileUpdate",
  });
});

/** @internal */
export type UpdateStreamingProfileRequest$Outbound = {
  name: string;
  streaming_profile_update: components.StreamingProfileUpdate$Outbound;
};

/** @internal */
export const UpdateStreamingProfileRequest$outboundSchema: z.ZodType<
  UpdateStreamingProfileRequest$Outbound,
  z.ZodTypeDef,
  UpdateStreamingProfileRequest
> = z.object({
  name: z.string(),
  streamingProfileUpdate: components.StreamingProfileUpdate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    streamingProfileUpdate: "streaming_profile_update",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStreamingProfileRequest$ {
  /** @deprecated use `UpdateStreamingProfileRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateStreamingProfileRequest$inboundSchema;
  /** @deprecated use `UpdateStreamingProfileRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateStreamingProfileRequest$outboundSchema;
  /** @deprecated use `UpdateStreamingProfileRequest$Outbound` instead. */
  export type Outbound = UpdateStreamingProfileRequest$Outbound;
}

export function updateStreamingProfileRequestToJSON(
  updateStreamingProfileRequest: UpdateStreamingProfileRequest,
): string {
  return JSON.stringify(
    UpdateStreamingProfileRequest$outboundSchema.parse(
      updateStreamingProfileRequest,
    ),
  );
}

export function updateStreamingProfileRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStreamingProfileRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateStreamingProfileRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStreamingProfileRequest' from JSON`,
  );
}

/** @internal */
export const UpdateStreamingProfileResponse$inboundSchema: z.ZodType<
  UpdateStreamingProfileResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  data: components.StreamingProfile$inboundSchema,
});

/** @internal */
export type UpdateStreamingProfileResponse$Outbound = {
  message: string;
  data: components.StreamingProfile$Outbound;
};

/** @internal */
export const UpdateStreamingProfileResponse$outboundSchema: z.ZodType<
  UpdateStreamingProfileResponse$Outbound,
  z.ZodTypeDef,
  UpdateStreamingProfileResponse
> = z.object({
  message: z.string(),
  data: components.StreamingProfile$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStreamingProfileResponse$ {
  /** @deprecated use `UpdateStreamingProfileResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateStreamingProfileResponse$inboundSchema;
  /** @deprecated use `UpdateStreamingProfileResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateStreamingProfileResponse$outboundSchema;
  /** @deprecated use `UpdateStreamingProfileResponse$Outbound` instead. */
  export type Outbound = UpdateStreamingProfileResponse$Outbound;
}

export function updateStreamingProfileResponseToJSON(
  updateStreamingProfileResponse: UpdateStreamingProfileResponse,
): string {
  return JSON.stringify(
    UpdateStreamingProfileResponse$outboundSchema.parse(
      updateStreamingProfileResponse,
    ),
  );
}

export function updateStreamingProfileResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStreamingProfileResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateStreamingProfileResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStreamingProfileResponse' from JSON`,
  );
}
