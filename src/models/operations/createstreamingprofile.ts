/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateStreamingProfileGlobals = {
  /**
   * The cloud name of your product environment.
   */
  cloudName?: string | undefined;
};

/**
 * Streaming profile created
 */
export type CreateStreamingProfileResponse = {
  data: components.StreamingProfile;
};

/** @internal */
export const CreateStreamingProfileGlobals$inboundSchema: z.ZodType<
  CreateStreamingProfileGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "cloud_name": "cloudName",
  });
});

/** @internal */
export type CreateStreamingProfileGlobals$Outbound = {
  cloud_name?: string | undefined;
};

/** @internal */
export const CreateStreamingProfileGlobals$outboundSchema: z.ZodType<
  CreateStreamingProfileGlobals$Outbound,
  z.ZodTypeDef,
  CreateStreamingProfileGlobals
> = z.object({
  cloudName: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    cloudName: "cloud_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateStreamingProfileGlobals$ {
  /** @deprecated use `CreateStreamingProfileGlobals$inboundSchema` instead. */
  export const inboundSchema = CreateStreamingProfileGlobals$inboundSchema;
  /** @deprecated use `CreateStreamingProfileGlobals$outboundSchema` instead. */
  export const outboundSchema = CreateStreamingProfileGlobals$outboundSchema;
  /** @deprecated use `CreateStreamingProfileGlobals$Outbound` instead. */
  export type Outbound = CreateStreamingProfileGlobals$Outbound;
}

export function createStreamingProfileGlobalsToJSON(
  createStreamingProfileGlobals: CreateStreamingProfileGlobals,
): string {
  return JSON.stringify(
    CreateStreamingProfileGlobals$outboundSchema.parse(
      createStreamingProfileGlobals,
    ),
  );
}

export function createStreamingProfileGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<CreateStreamingProfileGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateStreamingProfileGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateStreamingProfileGlobals' from JSON`,
  );
}

/** @internal */
export const CreateStreamingProfileResponse$inboundSchema: z.ZodType<
  CreateStreamingProfileResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: components.StreamingProfile$inboundSchema,
});

/** @internal */
export type CreateStreamingProfileResponse$Outbound = {
  data: components.StreamingProfile$Outbound;
};

/** @internal */
export const CreateStreamingProfileResponse$outboundSchema: z.ZodType<
  CreateStreamingProfileResponse$Outbound,
  z.ZodTypeDef,
  CreateStreamingProfileResponse
> = z.object({
  data: components.StreamingProfile$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateStreamingProfileResponse$ {
  /** @deprecated use `CreateStreamingProfileResponse$inboundSchema` instead. */
  export const inboundSchema = CreateStreamingProfileResponse$inboundSchema;
  /** @deprecated use `CreateStreamingProfileResponse$outboundSchema` instead. */
  export const outboundSchema = CreateStreamingProfileResponse$outboundSchema;
  /** @deprecated use `CreateStreamingProfileResponse$Outbound` instead. */
  export type Outbound = CreateStreamingProfileResponse$Outbound;
}

export function createStreamingProfileResponseToJSON(
  createStreamingProfileResponse: CreateStreamingProfileResponse,
): string {
  return JSON.stringify(
    CreateStreamingProfileResponse$outboundSchema.parse(
      createStreamingProfileResponse,
    ),
  );
}

export function createStreamingProfileResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateStreamingProfileResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateStreamingProfileResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateStreamingProfileResponse' from JSON`,
  );
}
